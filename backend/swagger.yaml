openapi: 3.0.0
info:
  version: "1.0.0"
  title: "REST API Documentation"
servers:
  - url: http://localhost:3000/
    description: Localhost development server 
  - url: https://ppwa-api-exam.onrender.com/
    description: Render remote server
components:
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: auth-token

  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        nickname:
          type: string
    LoginCredentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
        id:
          type: string
        nickname:
          type: string
    Todo:
      type: object
      properties:
        todo:
          type: string
        author:
          type: string
        creator:
          type: string
    TodoList:
      type: array
      items:
        $ref: "#/components/schemas/Todo"

paths:
  /register:
    post:
      tags:
        - Authentication
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User registration successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /login:
    post:
      tags:
        - Authentication
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCredentials"
      responses:
        "200":
          description: User login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /todos:
    get:
      tags:
        - Todos
      summary: Get all Todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoList"
      security:
        - ApiKeyAuth: []
    post:
      tags:
        - Todos
      summary: Create a new Todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Todo"
      responses:
        "201":
          description: Todo creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
      security:
        - ApiKeyAuth: []
  /todos/get/{id}:
    get:
      tags:
        - Todos
      summary: Get a Todo by ID
      parameters:
        - in: path
          name: id
          description: Todo ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "404":
          description: Todo not found
      security:
        - ApiKeyAuth: []
  /todos/delete/{id}:
    delete:
      tags:
        - Todos
      summary: Delete a Todo by ID
      parameters:
        - in: path
          name: id
          description: Todo ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "404":
          description: Todo not found
      security:
        - ApiKeyAuth: []
  /todos/update/{id}:
    put:
      tags:
        - Todos
      summary: Update a Todo by ID
      parameters:
        - in: path
          name: id
          description: Todo ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Todo"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "404":
          description: Todo not found
      security:
        - ApiKeyAuth: []
  /specificUserData/{id}:
    get:
      tags:
        - Users
      summary: Get user data by ID
      parameters:
        - in: path
          name: id
          description: User ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
      security:
        - ApiKeyAuth: []
  /convertNicknamesToIds:
    post:
      tags:
        - Users
      summary: Convert user nicknames to user IDs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nickname:
                      type: string
                    id:
                      type: string
        "408":
          description: Request timeout
      security:
        - ApiKeyAuth: []
  /taskByNickname/{nickname}:
    get:
      tags:
        - Todos
      summary: Get Todos by creator's nickname
      parameters:
        - in: path
          name: nickname
          description: Creator's nickname
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoList"
        "404":
          description: User not found
      security:
        - ApiKeyAuth: []

